package at.fhooe.mc.gainroot.exploits;

import android.util.Log;
import at.fhooe.mc.gainroot.R;
import at.fhooe.mc.gainroot.essentials.Exploit;

/**
 * Implementation of the <b>GingerBreak</b> exploit from <b>The Android Exploit
 * Crew</b>.
 * 
 * @author Gerald Schoiber
 * @version 1.0
 * @see Log, Exploit
 */
public class GingerBreak extends Exploit {

	/**
	 * Fill the super constructor with information about the exploit.
	 */
	public GingerBreak() {
		super(
				R.raw.gingerbreak_mod, // id
				"GingerBreak", // name
				"2.2 - 3.0", // versions
				"The Android Exploid Crew", // author
				"2010", // date
				"android 2.2-3.0 vold root exploit \"mPartMinors[] (NPARTS) out of bounds write\""
						+ "(checked for upper limit but not against negative values).\n"
						+ "Exploited by changing GOT entry of strcmp(),atoi() etc. to system()"
						+ "and then triggering such call with provided pointer. :D\n\n"
						+ "We nevermind NX protections and what they call ROP.\n"
						+ "(C) 2010-2011 The Android Exploid Crew\n"
						+ "Before using, insert empty formatted sdcard. USE IT AT YOUR OWN RISK, THIS PROGRAM"
						+ "MIGHT NOT WORK OR MAKES YOUR DEVICE USELESS/BRICKED. SO BE WARNED!"
						+ "I AM NOT RESPONSIBLE FOR ANY DAMAGE IT MIGHT CAUSE!", // info
				null); // resources
	}

	/**
	 * Run the GingerBreak exploit native with the {@link Runtime} method, wait
	 * for the return value and tell the user about if it has been worked.
	 * 
	 * @see Boolean, Integer, Log, Process, Exception, Runtime,
	 *      showToast(String), finish(), getName(), showProgressDialog(String,
	 *      String)
	 */
	@Override
	public void run() {
		showProgressDialog(getName(),
				"gain root...\nGingerBreak is running, this can take a while...");
		Log.d(TAG, "test GingerBreak Exploit ...");
		try {
			Log.d(TAG, m_path + getResources().getResourceEntryName(getId()));
			java.lang.Process proc = Runtime.getRuntime().exec(
					m_path + getResources().getResourceEntryName(getId()));
			int val = proc.waitFor();
			Log.d(TAG, "test return: " + val);
			if (val == 0) {
				finish(true);
				return;
			}
		} catch (Exception e) {
			Log.e(TAG, e.getMessage());
			showToast("GingerBreak fails");
		}
		finish(false);
	}
}
