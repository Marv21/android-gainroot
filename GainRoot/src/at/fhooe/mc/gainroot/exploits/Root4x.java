package at.fhooe.mc.gainroot.exploits;

import java.io.BufferedReader;
import java.io.InputStreamReader;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.util.Log;
import at.fhooe.mc.gainroot.R;
import at.fhooe.mc.gainroot.essentials.Exploit;

public class Root4x extends Exploit {

	public Root4x() {
		super(R.raw.root4, 	//id
				"p2p-adb", 	//name
				"4.x", 		//versions
				"Bin4ry", 	//author
				"2012", 	//date 
				"---- adb based exploit ----\nto use this exploit, we must establish a adb " +
				"connection over usb and execute:\n\tadb tcpip 5555\n\n" +
				"if root was successful, device will reboot.", 		//info
				new int[]{R.raw.fakebackup, R.raw.adb_arm_static});	//resources
	}

	@Override
	public void run() {
		runOnUiThread(new Runnable() {
			
			@Override
			public void run() {
				AlertDialog dialog = new AlertDialog.Builder(Root4x.this).create();
				dialog.setTitle(getName());
				dialog.setMessage("Please connect with device and type:\nadb tcpip 5555");
				dialog.setCancelable(false);
				dialog.setButton(AlertDialog.BUTTON_POSITIVE, "Done", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int id) {
						Log.d(TAG, "end dialog");
		        	   	showProgressDialog(getName(), "gain root...\nRoot4x is running, this can take a while...");
		           		Log.d(TAG, "test Root4x Exploit ...");
		           		try {
		           			Log.d(TAG, m_path + getResources().getResourceEntryName(getId()));
		           			java.lang.Process proc = Runtime.getRuntime().exec("/system/bin/sh " + m_path + getResources().getResourceEntryName(getId()));
		           			
		           			BufferedReader read = new BufferedReader(new InputStreamReader(proc.getInputStream()));
		           			while(read!=null)
		           				Log.d(TAG, read.readLine());
		           			
		           			int val = proc.waitFor();
		           			Log.d(TAG, "test return: " + val);
		           			if(val==0){
		           				finish(true);
		           				return;
		           			}
		           		} catch (Exception e) {
		           			Log.e(TAG, e.getMessage());
		           			showToast("Root4x fails");
		           		}
		           		finish(false);
		           		dialog.dismiss();
					}
				});
				dialog.setButton(AlertDialog.BUTTON_NEGATIVE, "Abort", new DialogInterface.OnClickListener() {
		            public void onClick(DialogInterface dialog, int id) {
		         	   Log.d(TAG, "end dialog");
		         	   dialog.dismiss();
		            }
		        });
				dialog.show();
			}
		});
	}
}
